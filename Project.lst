Microsoft (R) Macro Assembler Version 14.16.27030.1	    06/11/19 18:31:59
jogo.asm						     Page 1 - 1


				; Implementa��o do jogo Ganso Attack!! em assembly pelos alunos
				; Matheus de Brito Soares Porto RA: 744348
				; Vitor Hugo Guilherme          RA: 744359
				; Da disciplina Arquitetura e Organiza��o de Computadores 2 - DC- UFSCar
				; Professor: Dr. Luciano Neres

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data

 00000000 00000000		outHandle    DWORD ? 
 00000004 0055 0032		scrSize COORD <85,50>

				;constantes utilizadas no desenho da moldura
 = 00000069			LARGURA = 105
 = 0000001D			ALTURA = 29

				;Variáveis auxiliares para impressão e exclusão de objetos da tela
 00000008 00			PosY BYTE ?
 00000009 00			PosX BYTE ?
 0000000A 00			larguraO BYTE ?
 0000000B 00			alturaO BYTE ?

				;Tamanho dos dos desenhos
 = 00000005			LARGURA_OBJ1 = 5
 = 00000003			ALTURA_OBJ1 = 3
 = 00000007			LARGURA_OBJ2 = 7
 = 00000003			ALTURA_OBJ2 = 3
 = 0000000B			LARGURA_GANSO = 11
 = 00000009			ALTURA_GANSO = 9
 = 00000007			ALTURA_GANSO_AGACHADO = 7
				;Posição no eixo Y dos desenhos
 = 00000014			Y_GANSO_EM_PE = 20
 = 00000016			Y_GANSO_AGACHADO = 22
 = 0000001A			Y_OBSTACULO1 = 26
 = 00000013			Y_OBSTACULO2 = 19



				; Logo do jogo
 0000000C 20 20 20 20 20	logo BYTE "                      ____                            _   _   _             _    _ _ ",0ah, 0dh  
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5F 5F 5F
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   20 20 20 5F 20
	   20 20 5F 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 20 20 20
	   20 5F 20 5F 20
	   0A 0D
 00000063  09 20 20 20 20		 BYTE "	              / ___| __ _ _ __  ___  ___      / \ | |_| |_ __ _  ___| | _| | |",0ah, 0dh  
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 5F 5F 5F
	   7C 20 5F 5F 20
	   5F 20 5F 20 5F
	   5F 20 20 5F 5F
	   5F 20 20 5F 5F
	   5F 20 20 20 20
	   20 20 2F 20 5C
	   20 7C 20 7C 5F
	   7C 20 7C 5F 20
	   5F 5F 20 5F 20
	   20 5F 5F 5F 7C
	   20 7C 20 5F 7C
	   20 7C 20 7C 0A
	   0D
 000000B4  09 20 20 20 20		 BYTE "	             | |  _ / _` | '_ \/ __|/ _ \    / _ \| __| __/ _` |/ __| |/ / | |",0ah, 0dh  
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 7C 20 20 5F
	   20 2F 20 5F 60
	   20 7C 20 27 5F
	   20 5C 2F 20 5F
	   5F 7C 2F 20 5F
	   20 5C 20 20 20
	   20 2F 20 5F 20
	   5C 7C 20 5F 5F
	   7C 20 5F 5F 2F
	   20 5F 60 20 7C
	   2F 20 5F 5F 7C
	   20 7C 2F 20 2F
	   20 7C 20 7C 0A
	   0D
 00000105  09 20 20 20 20		 BYTE "	             | |_| | (_| | | | \__ \ (_) |  / ___ \ |_| || (_| | (__|   <|_|_|",0ah, 0dh  
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 7C 5F 7C 20
	   7C 20 28 5F 7C
	   20 7C 20 7C 20
	   7C 20 5C 5F 5F
	   20 5C 20 28 5F
	   29 20 7C 20 20
	   2F 20 5F 5F 5F
	   20 5C 20 7C 5F
	   7C 20 7C 7C 20
	   28 5F 7C 20 7C
	   20 28 5F 5F 7C
	   20 20 20 3C 7C
	   5F 7C 5F 7C 0A
	   0D
 00000156  09 20 20 20 20		 BYTE "	              \____|\__,_|_| |_|___/\___/  /_/   \_\__|\__\__,_|\___|_|\_(_|_)",0ah, 0dh, 0 
	   20 20 20 20 20
	   20 20 20 20 20
	   5C 5F 5F 5F 5F
	   7C 5C 5F 5F 2C
	   5F 7C 5F 7C 20
	   7C 5F 7C 5F 5F
	   5F 2F 5C 5F 5F
	   5F 2F 20 20 2F
	   5F 2F 20 20 20
	   5C 5F 5C 5F 5F
	   7C 5C 5F 5F 5C
	   5F 5F 2C 5F 7C
	   5C 5F 5F 5F 7C
	   5F 7C 5C 5F 28
	   5F 7C 5F 29 0A
	   0D 00

				; MENU
 000001A8 09 20 20 20 20	 menu   BYTE "	                  Selecione uma dificuldade para jogar:",0ah, 0dh, 0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 53
	   65 6C 65 63 69
	   6F 6E 65 20 75
	   6D 61 20 64 69
	   66 69 63 75 6C
	   64 61 64 65 20
	   70 61 72 61 20
	   6A 6F 67 61 72
	   3A 0A 0D 0A
 000001E3  09 09 09 09 20			BYTE "				              1 - Facil",0ah, 0dh
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 31 20
	   2D 20 46 61 63
	   69 6C 0A 0D
 00000200  09 09 09 09 20			BYTE "				              2 - Dificil",0ah, 0dh
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 32 20
	   2D 20 44 69 66
	   69 63 69 6C 0A
	   0D
 0000021F  09 09 09 09 20	        BYTE "				              ESC - SAIR",0ah, 0dh
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 45 53
	   43 20 2D 20 53
	   41 49 52 0A 0D
 0000023D  09 09 09 09 00			BYTE "				",0
						
				;Ganso
 00000242 20 20 20 20 20	ganso 	BYTE "                  __ ",0ah,0dh  
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 5F
	   20 0A 0D
 00000259  20 20 20 20 20			BYTE "                  /  >",0ah,0dh  
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2F 20
	   20 3E 0A 0D
 00000271  20 20 20 20 20			BYTE "                 /  \ ",0ah,0dh  
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   5C 20 0A 0D
 00000289  20 20 20 20 20			BYTE "           _____/   / ",0ah,0dh  
	   20 20 20 20 20
	   20 5F 5F 5F 5F
	   5F 2F 20 20 20
	   2F 20 0A 0D
 000002A1  20 20 20 20 20			BYTE "          <        /  ",0ah,0dh  
	   20 20 20 20 20
	   3C 20 20 20 20
	   20 20 20 20 2F
	   20 20 0A 0D
 000002B9  20 20 20 20 20			BYTE "           \_    _/   ",0ah,0dh  
	   20 20 20 20 20
	   20 5C 5F 20 20
	   20 20 5F 2F 20
	   20 20 0A 0D
 000002D1  20 20 20 20 20			BYTE "            |   |     ",0ah,0dh  
	   20 20 20 20 20
	   20 20 7C 20 20
	   20 7C 20 20 20
	   20 20 0A 0D
 000002E9  20 20 20 20 20			BYTE "            |   |     ",0ah,0dh  
	   20 20 20 20 20
	   20 20 7C 20 20
	   20 7C 20 20 20
	   20 20 0A 0D
 00000301  20 20 20 20 20			BYTE "            ^   ^     ",0ah,0dh,0
	   20 20 20 20 20
	   20 20 5E 20 20
	   20 5E 20 20 20
	   20 20 0A 0D 00
					
				; Ganso Agachado
 0000031A 20 20 20 20 20	ganso_agachado 	BYTE "                 __  ",0ah,0dh  
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5F 5F 20
	   20 0A 0D
 00000331  20 20 20 20 20					BYTE "                 /  >",0ah,0dh  
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   3E 0A 0D
 00000348  20 20 20 20 20					BYTE "           _____/  \ ",0ah,0dh  
	   20 20 20 20 20
	   20 5F 5F 5F 5F
	   5F 2F 20 20 5C
	   20 0A 0D
 0000035F  20 20 20 20 20					BYTE "          <        /  ",0ah,0dh  
	   20 20 20 20 20
	   3C 20 20 20 20
	   20 20 20 20 2F
	   20 20 0A 0D
 00000377  20 20 20 20 20					BYTE "            \_   _/   ",0ah,0dh  
	   20 20 20 20 20
	   20 20 5C 5F 20
	   20 20 5F 2F 20
	   20 20 0A 0D
 0000038F  20 20 20 20 20					BYTE "             |   |     ",0ah,0dh  
	   20 20 20 20 20
	   20 20 20 7C 20
	   20 20 7C 20 20
	   20 20 20 0A 0D
 000003A8  20 20 20 20 20					BYTE "             ^   ^     ",0ah,0dh,0
	   20 20 20 20 20
	   20 20 20 5E 20
	   20 20 5E 20 20
	   20 20 20 0A 0D
	   00
								
				; Obstaculos
 000003C2 21 21 21 21 21	obstaculo1 	BYTE "!!!!!",0ah,0dh
	   0A 0D
 000003C9  21 20 20 20 21				BYTE "!   !",0ah,0dh
	   0A 0D
 000003D0  21 20 20 20 21				BYTE "!   !",0ah,0dh,0
	   0A 0D 00
							
 000003D8 20 2F 0A 0D		obstaculo2  BYTE " /",0ah,0dh
 000003DC  78 2D 2D 2D 2D				BYTE "x------",0ah,0dh
	   2D 2D 0A 0D
 000003E5  20 5C 20 0A 0D				BYTE " \ ",0ah,0dh,0
	   00
							
 00000000			.code

				;==================Desenha o menu inicial ==========================
				;Recebe: nda
				;Retorna: Desenho do menu na tela
				;===================================================================
 00000000			DesenhaMenu PROC
 00000000  B8 00000004			mov  eax, red
 00000005  E8 00000000 E		call SetTextColor
 0000000A  B2 01			mov dl, 1
 0000000C  B6 06			mov dh, 6
 0000000E  E8 00000000 E		call GotoXY
 00000013  BA 0000000C R		mov edx, OFFSET logo
 00000018  E8 00000000 E	    call WriteString

 0000001D  B8 0000000F			mov eax, white
 00000022  E8 00000000 E		call SetTextColor 
 00000027  B6 0F			mov dh, 15
 00000029  E8 00000000 E		call GotoXY
 0000002E  BA 000001A8 R	    mov edx, OFFSET menu   
 00000033  E8 00000000 E		call WriteString  
 00000038  C3				ret
 00000039			DesenhaMenu ENDP
				;===================================================================

				;==============Desenha a moldura da tela=============================
				;Recebe: eax com a cor da moldura, LARGURA e ALTURA da tela
				;Retorna: desenho da moldura na tela 
				;====================================================================
 00000039			Moldura PROC USES edx ecx
 00000039  52		   *	    push   edx
 0000003A  51		   *	    push   ecx
 0000003B  E8 00000000 E		call SetTextColor

					;Superior
 00000040  B2 01			mov dl, 1
 00000042  B6 01			mov dh, 1
 00000044  B9 00000069			mov ecx, LARGURA ;LARGURA da tela do jogo
 00000049  B0 DC			mov al, 220	;caracter ASCII que compõe as barras superior e inferior
 0000004B  EB 09			jmp HORIZONTAL

 0000004D				INFERIOR:
 0000004D  B2 01				mov dl, 1
 0000004F  B6 1D				mov dh, ALTURA	; posição da barra inferior
 00000051  B9 00000069				mov ecx, LARGURA ;LARGURA da tela do jogo

					;Desenha as barras superior e inferior(uma por vez)
 00000056				HORIZONTAL:          
 00000056  E8 00000000 E			call GotoXY
 0000005B  E8 00000000 E			call WriteChar
 00000060  FE C2				inc dl
 00000062  E2 F2			loop HORIZONTAL
 00000064  80 FE 1D			cmp dh, ALTURA
 00000067  75 E4			jne INFERIOR ;se dh != 24 vai para inferior desenhar a outra barra

					;Laterais
 00000069  B2 01			mov dl, 1
 0000006B  B6 02			mov dh, 2
 0000006D  B9 0000001C			mov ecx, ALTURA-1
 00000072  B0 DB			mov al, 219 ;caracter que compõe as barras laterais

					;Desenha as barras verticais(as duas juntas)
 00000074				VERTICAL:            
 00000074  E8 00000000 E			call GotoXY
 00000079  E8 00000000 E			call WriteChar
 0000007E  80 C2 68				add dl, LARGURA-1	;pula para a esquerda
 00000081  E8 00000000 E			call GotoXY
 00000086  E8 00000000 E			call WriteChar
 0000008B  80 EA 68				sub dl, LARGURA-1	;volta para a direita
 0000008E  FE C6				inc dh
 00000090  E2 E2			loop VERTICAL
					ret
 00000092  59		   *	    pop    ecx
 00000093  5A		   *	    pop    edx
 00000094  C3		   *	    ret    00000h
 00000095			Moldura ENDP

				;======================Desenha o Ganso Em Pe =======================
				;Recebe: PosY
				;Retorna: desenho do ganso na tela
				;===================================================================
 00000095			DesenhaGansoEmPe PROC USES eax edx
 00000095  50		   *	    push   eax
 00000096  52		   *	    push   edx
 00000097  B8 0000000F			mov eax, white
 0000009C  E8 00000000 E		call SetTextColor
 000000A1  B2 01			mov dl,1
 000000A3  B6 14			mov dh,Y_GANSO_EM_PE
 000000A5  E8 00000000 E		call GotoXY
 000000AA  BA 00000242 R		mov edx, OFFSET ganso
 000000AF  E8 00000000 E		call WriteString
				ret
 000000B4  5A		   *	    pop    edx
 000000B5  58		   *	    pop    eax
 000000B6  C3		   *	    ret    00000h
 000000B7			DesenhaGansoEmPe ENDP
				;===================================================================

				;======================Desenha o Ganso agachado=====================
				;Recebe: PosY
				;Retorna: desenho do ganso na tela
				;===================================================================
 000000B7			DesenhaGansoAgachado PROC USES eax edx
 000000B7  50		   *	    push   eax
 000000B8  52		   *	    push   edx
 000000B9  B8 0000000F			mov eax, white
 000000BE  E8 00000000 E		call SetTextColor
 000000C3  B2 01			mov dl,1
 000000C5  B6 16			mov dh,Y_GANSO_AGACHADO
 000000C7  E8 00000000 E		call GotoXY
 000000CC  BA 0000031A R		mov edx, OFFSET ganso_agachado
 000000D1  E8 00000000 E		call WriteString
				ret
 000000D6  5A		   *	    pop    edx
 000000D7  58		   *	    pop    eax
 000000D8  C3		   *	    ret    00000h
 000000D9			DesenhaGansoAgachado ENDP
				;===================================================================

				;======================Deleta Desenho===============================
				;Recebe:PosX, PosY(ganso em pé = 20, obstaculo1 = 26, obstaculo2 = 19),
				;		larguraO, alturaO
				;Retorna:
				;===================================================================
 000000D9			DeletaDesenho PROC USES edx eax ecx
 000000D9  52		   *	    push   edx
 000000DA  50		   *	    push   eax
 000000DB  51		   *	    push   ecx
 000000DC  8A 15 00000009 R		mov dl, PosX
 000000E2  8A 35 00000008 R		mov dh, PosY
 000000E8  E8 00000000 E		call GotoXY
					
 000000ED  0F B6 0D			movzx ecx, alturaO   ; Nr de Linhas do Desenho
	   0000000B R
 000000F4  B0 20			mov al, 32   ; Barra de Espaço
 000000F6				LINHA:
 000000F6  51					push ecx
 000000F7  0F B6 0D				movzx ecx, larguraO   ; Nr de Colunas do Desenho
	   0000000A R
 000000FE					COLUNA:
 000000FE  E8 00000000 E				call WriteChar
 00000103  E2 F9					loop COLUNA
 00000105  59					pop ecx
 00000106  FE C6				inc dh
 00000108  E8 00000000 E			call GotoXY
 0000010D  E2 E7			loop LINHA

					ret
 0000010F  59		   *	    pop    ecx
 00000110  58		   *	    pop    eax
 00000111  5A		   *	    pop    edx
 00000112  C3		   *	    ret    00000h
 00000113			DeletaDesenho ENDP

				;=====================Desenha Obstaculo1============================
				;Recebe: PosX
				;Retorna: obstaculo desenhado na tela
				;===================================================================
 00000113			DesenhaObstaculo1 PROC 
 00000113  B8 00000006			mov eax, brown
 00000118  E8 00000000 E		call SetTextColor
 0000011D  8A 15 00000009 R		mov dl, PosX
 00000123  B6 1A			mov dh, Y_OBSTACULO1
 00000125  B0 21			mov al, "!"
 00000127  B9 00000005			mov ecx, 5
 0000012C				CIMA:
 0000012C  E8 00000000 E			call GotoXY
 00000131  E8 00000000 E			call WriteChar
 00000136  FE C2				inc dl
 00000138  E2 F2			loop CIMA
					
 0000013A  8A 15 00000009 R		mov dl, PosX
 00000140  B6 1B			mov dh, 27
 00000142  B9 00000002			mov ecx, 2
 00000147				LADOS:
 00000147  E8 00000000 E			call GotoXY
 0000014C  E8 00000000 E			call WriteChar
 00000151  80 C2 04				add dl, 4
 00000154  E8 00000000 E			call GotoXY
 00000159  E8 00000000 E			call WriteChar
 0000015E  80 EA 04				sub dl, 4
 00000161  FE C6				inc dh
 00000163  E2 E2			loop LADOS
 00000165  C3				ret
 00000166			DesenhaObstaculo1 ENDP
				;====================================================================

				;=====================Desenha Obstaculo2============================
				;Recebe: PosXObstaculo2
				;Retorna: obstaculo desenhado na tela
				;===================================================================
 00000166			DesenhaObstaculo2 PROC
 00000166  B8 00000004			mov eax, red
 0000016B  E8 00000000 E		call SetTextColor
 00000170  80 05 00000009 R		add PosX, 1
	   01
 00000177  8A 15 00000009 R		mov dl, PosX
 0000017D  B6 13			mov dh, Y_OBSTACULO2
 0000017F  FE 0D 00000009 R		dec PosX

 00000185  B0 2F			mov al, "/"
 00000187  E8 00000000 E		call GotoXY
 0000018C  E8 00000000 E		call WriteChar

 00000191  FE C6			inc dh
 00000193  FE CA			dec dl
 00000195  B0 78			mov al, "x"
 00000197  E8 00000000 E		call GotoXY
 0000019C  E8 00000000 E		call WriteChar

 000001A1  FE C2			inc dl
 000001A3  B0 2D			mov al, "-"
 000001A5  B9 00000006			mov ecx, 6
 000001AA				L1: 
 000001AA  E8 00000000 E			call GotoXY
 000001AF  E8 00000000 E			call WriteChar
 000001B4  FE C2				inc dl
 000001B6  E2 F2			loop L1

 000001B8  FE C6			inc dh
 000001BA  80 EA 06			sub dl, 6
 000001BD  B0 5C			mov al, "\"
 000001BF  E8 00000000 E		call GotoXY
 000001C4  E8 00000000 E		call WriteChar
 000001C9  C3				ret
 000001CA			DesenhaObstaculo2 ENDP

				;=======================Inicializa Jogo==============================
				;Recebe: nda
				;Retorna: Tela inicial do jogo
				;====================================================================
 000001CA			InicializaJogo PROC
 000001CA  E8 00000000 E		call Clrscr
 000001CF  E8 FFFFFEE3			call DesenhaGansoAgachado
 000001D4  B8 00000002			mov eax, green	;cor da moldura
 000001D9  E8 FFFFFE5B			call Moldura

					;Deletando o ganso agachado
 000001DE  C6 05 00000008 R		mov PosY, Y_GANSO_AGACHADO
	   16
 000001E5  C6 05 00000009 R		mov PosX, 10
	   0A
 000001EC  C6 05 0000000B R		mov alturaO, ALTURA_GANSO_AGACHADO
	   07
 000001F3  C6 05 0000000A R		mov larguraO, LARGURA_GANSO
	   0B
					;call DeletaDesenho
					
 000001FA  C6 05 00000009 R		mov PosX, 30
	   1E
 00000201  E8 FFFFFF0D			call DesenhaObstaculo1
 00000206  C3				ret
 00000207			InicializaJogo ENDP
				;====================================================================

 00000207			main PROC
					;INVOKE GetStdHandle,STD_OUTPUT_HANDLE 
					;mov outHandle, eax										;DESCOBRIR O QUE FAZ (???)
					;INVOKE SetConsoleScreenBufferSize,outHandle,scrSize
 00000207  E8 00000000 E		call Clrscr
					
					;Desenha menu
 0000020C  E8 FFFFFDEF			call DesenhaMenu  
 00000211  B8 00000004			mov eax, red     ;cor da moldura
 00000216  E8 FFFFFE1E			call Moldura

					;Esperando tecla ser pressionada
 0000021B				EsperandoTecla:
 0000021B  B8 00000032				mov  eax,50          ; sleep, to allow OS to time slice
 00000220  E8 00000000 E			call Delay           ; (otherwise, some key presses are lost)
 00000225  E8 00000000 E			call ReadKey         ; look for keyboard input 
 0000022A  52					push edx

					.IF al == "1"
 0000022B  3C 31	   *	    cmp    al, '1'
 0000022D  75 09	   *	    jne    @C0001
						;TODO jogo fácil
 0000022F  E8 FFFFFF96				call InicializaJogo
 00000234  EB 21				jmp SAIR
					.ELSEIF al == "2"
 00000236  EB 1D	   *	    jmp    @C0003
 00000238		   *@C0001:
 00000238  3C 32	   *	    cmp    al, '2'
 0000023A  75 0E	   *	    jne    @C0004
						;TODO jogo dificil
 0000023C  E8 00000000 E			call Clrscr
 00000241  E8 FFFFFDF3				call moldura
 00000246  EB 0F				jmp SAIR
					.ELSEIF al == VK_ESCAPE
 00000248  EB 0B	   *	    jmp    @C0006
 0000024A		   *@C0004:
 0000024A  3C 1B	   *	    cmp    al, VK_ESCAPE
 0000024C  75 07	   *	    jne    @C0007
						exit
 0000024E  6A 00	   *	    push   +000000000h
 00000250  E8 00000000 E   *	    call   ExitProcess
					.ENDIF
 00000255		   *@C0007:
 00000255		   *@C0006:
 00000255		   *@C0003:
					
 00000255  EB C4			jmp   EsperandoTecla    ; nenhuma tecla válida pressionada, tenta novamente
 00000257			SAIR:
 00000257  B6 50			mov dh, 80
 00000259  E8 00000000 E		call GotoXY
					exit
 0000025E  6A 00	   *	    push   +000000000h
 00000260  E8 00000000 E   *	    call   ExitProcess
 00000265			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.16.27030.1	    06/11/19 18:31:59
jogo.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000003EB Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000265 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DeletaDesenho  . . . . . . . . .	P Near	 000000D9 _TEXT	Length= 0000003A Public STDCALL
  LINHA  . . . . . . . . . . . .	L Near	 000000F6 _TEXT	
  COLUNA . . . . . . . . . . . .	L Near	 000000FE _TEXT	
DesenhaGansoAgachado . . . . . .	P Near	 000000B7 _TEXT	Length= 00000022 Public STDCALL
DesenhaGansoEmPe . . . . . . . .	P Near	 00000095 _TEXT	Length= 00000022 Public STDCALL
DesenhaMenu  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000039 Public STDCALL
DesenhaObstaculo1  . . . . . . .	P Near	 00000113 _TEXT	Length= 00000053 Public STDCALL
  CIMA . . . . . . . . . . . . .	L Near	 0000012C _TEXT	
  LADOS  . . . . . . . . . . . .	L Near	 00000147 _TEXT	
DesenhaObstaculo2  . . . . . . .	P Near	 00000166 _TEXT	Length= 00000064 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000001AA _TEXT	
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InicializaJogo . . . . . . . . .	P Near	 000001CA _TEXT	Length= 0000003D Public STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Moldura  . . . . . . . . . . . .	P Near	 00000039 _TEXT	Length= 0000005C Public STDCALL
  INFERIOR . . . . . . . . . . .	L Near	 0000004D _TEXT	
  HORIZONTAL . . . . . . . . . .	L Near	 00000056 _TEXT	
  VERTICAL . . . . . . . . . . .	L Near	 00000074 _TEXT	
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000207 _TEXT	Length= 0000005E Public STDCALL
  EsperandoTecla . . . . . . . .	L Near	 0000021B _TEXT	
  SAIR . . . . . . . . . . . . .	L Near	 00000257 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALTURA_GANSO_AGACHADO  . . . . .	Number	 00000007h   
ALTURA_GANSO . . . . . . . . . .	Number	 00000009h   
ALTURA_OBJ1  . . . . . . . . . .	Number	 00000003h   
ALTURA_OBJ2  . . . . . . . . . .	Number	 00000003h   
ALTURA . . . . . . . . . . . . .	Number	 0000001Dh   
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LARGURA_GANSO  . . . . . . . . .	Number	 0000000Bh   
LARGURA_OBJ1 . . . . . . . . . .	Number	 00000005h   
LARGURA_OBJ2 . . . . . . . . . .	Number	 00000007h   
LARGURA  . . . . . . . . . . . .	Number	 00000069h   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
PosX . . . . . . . . . . . . . .	Byte	 00000009 _DATA	
PosY . . . . . . . . . . . . . .	Byte	 00000008 _DATA	
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
Y_GANSO_AGACHADO . . . . . . . .	Number	 00000016h   
Y_GANSO_EM_PE  . . . . . . . . .	Number	 00000014h   
Y_OBSTACULO1 . . . . . . . . . .	Number	 0000001Ah   
Y_OBSTACULO2 . . . . . . . . . .	Number	 00000013h   
alturaO  . . . . . . . . . . . .	Byte	 0000000B _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
ganso_agachado . . . . . . . . .	Byte	 0000031A _DATA	
ganso  . . . . . . . . . . . . .	Byte	 00000242 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
larguraO . . . . . . . . . . . .	Byte	 0000000A _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
logo . . . . . . . . . . . . . .	Byte	 0000000C _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
menu . . . . . . . . . . . . . .	Byte	 000001A8 _DATA	
obstaculo1 . . . . . . . . . . .	Byte	 000003C2 _DATA	
obstaculo2 . . . . . . . . . . .	Byte	 000003D8 _DATA	
outHandle  . . . . . . . . . . .	DWord	 00000000 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
scrSize  . . . . . . . . . . . .	COORD	 00000004 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
